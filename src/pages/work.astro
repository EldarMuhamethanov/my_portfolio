---
import { WORK } from '../lib/constants'
import BaseLayout from '../layouts/BaseLayout.astro'
import TopLayout from '../layouts/TopLayout.astro'
import BottomLayout from '../layouts/BottomLayout.astro'
import { Badge } from '../components/ui/badge'

import { EXPERIENCE } from '../lib/constants'
---

<BaseLayout title={WORK.TITLE} description={WORK.DESCRIPTION}>
  <main class="flex min-h-[80vh] flex-auto flex-col" transition:animate="fade">
    <TopLayout>
      <h2
        class="scroll-m-20 text-4xl font-bold tracking-tight first:mt-0"
      >
        {WORK.TITLE}
      </h2>
    </TopLayout>
    <BottomLayout>
      <ul class="space-y-12">
        {
          EXPERIENCE.map((entry) => (
            <li class="animate group relative rounded-xl bg-card p-6 shadow-sm transition-all hover:shadow-md dark:bg-card/5">
              <div class="absolute -left-3 top-0 h-full w-1 bg-primary/30 group-hover:bg-primary" />
              
              <div class="mb-4 inline-block rounded-full bg-primary/10 px-3 py-1 text-sm font-medium text-primary">
                {entry.start} - {entry.end}
              </div>

              <a
                href={entry?.link}
                target="_blank"
                class={`group/link block font-bold text-foreground text-2xl transition-colors`}
              >
                {entry.company}
                {entry?.link && (
                  <span class="ml-2 inline-block transition-transform group-hover/link:translate-x-1">
                    →
                  </span>
                )}
              </a>

              <div class="mb-4 text-lg font-semibold text-muted-foreground">
                {entry.position}
              </div>

              <article class="prose dark:prose-invert">
                {!!entry.tasks.length && (
                  <h4 class="mb-3 text-sm font-bold uppercase text-primary/80">
                    Обязанности
                  </h4>
                )}
                <ul class="mb-6 list-inside list-disc space-y-2">
                  {entry.tasks.map((task) => (
                    <li class="text-sm text-muted-foreground">{task}</li>
                  ))}
                </ul>

                {!!entry.achievements.length && (
                  <h4 class="mb-3 text-sm font-bold uppercase text-primary/80">
                    Достижения
                  </h4>
                )}
                <ul class="mb-6 list-inside list-disc space-y-2">
                  {entry.achievements.map((achievement) => (
                    <li class="text-sm text-muted-foreground">{achievement}</li>
                  ))}
                </ul>

                {!!entry.stack.length && (
                  <h4 class="mb-3 text-sm font-bold uppercase text-primary/80">
                    Стек технологий
                  </h4>
                )}
                <div class="flex flex-wrap gap-2">
                  {entry.stack.map((item) => (
                    <Badge 
                      variant="outline" 
                      className="transition-colors hover:bg-primary hover:text-primary-foreground"
                    >
                      {item}
                    </Badge>
                  ))}
                </div>
              </article>
            </li>
          ))
        }
      </ul>
    </BottomLayout>
  </main>
</BaseLayout>
