---

import BaseLayout from '../../layouts/BaseLayout.astro'

import { PROJECTS } from '../../lib/constants';

export async function getStaticPaths() {
  return [
    { params: { id: 'smart-portal' } },
  ];
}

const { id } = Astro.params;

const project = PROJECTS.find(project => project.id === id)

if (!project) {
  return Astro.redirect('/404');
}

---

<BaseLayout title={`Project ${project.name}`} description={project.shortDescription}>
    <article class="max-w-6xl mx-auto px-4 py-8">
        <header class="text-center mb-12">
            <h1 class="text-5xl font-bold mb-4 bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
              {project.name}
            </h1>
            <p class="text-xl text-gray-600 mb-6 max-w-2xl mx-auto">
              {project.shortDescription}
            </p>
            
            <div class="flex justify-center gap-4">
              {project.site && <a 
                href={project.site} 
                target="_blank" 
                rel="noopener noreferrer"
                class="inline-flex items-center gap-2 bg-gradient-to-r from-blue-600 to-purple-600 text-white px-8 py-3 rounded-lg hover:opacity-90 transition-all transform hover:scale-105"
              >
                Посетить сайт
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clip-rule="evenodd" />
                </svg>
              </a>}
          
              {project.githubUrl && (
                <a 
                  href={project.githubUrl}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="inline-flex items-center gap-2 bg-gray-800 text-white px-8 py-3 rounded-lg hover:opacity-90 transition-all transform hover:scale-105"
                >
                  GitHub
                  <svg class="h-5 w-5" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                    <path fill-rule="evenodd" d="M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z" clip-rule="evenodd" />
                  </svg>
                </a>
              )}
            </div>
          </header>
      
        <section class="mb-16">
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6" id="gallery">
            {project.photos.map((photo, index) => (
              <div class="group relative overflow-hidden rounded-xl shadow-lg aspect-video cursor-pointer hover:shadow-xl transition-all duration-300">
                <img 
                  src={photo} 
                  alt={`${project.name} screenshot ${index + 1}`}
                  class="w-full h-full object-cover object-center transform group-hover:scale-105 transition-transform duration-300"
                  loading={index === 0 ? "eager" : "lazy"}
                />
                <div class="pointer-events-none absolute inset-0 bg-gradient-to-t from-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                  <div class="absolute bottom-4 left-4 text-white">
                    <p class="text-sm font-medium">Скриншот {index + 1}</p>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </section>
      
        <section class="mb-12 bg-gray-50 rounded-2xl p-8">
          <h2 class="text-2xl font-semibold mb-6 text-center">Технологический стек</h2>
          <div class="flex flex-wrap justify-center gap-3">
            {project.stack.map((tech) => (
              <span class="px-4 py-2 bg-white rounded-full text-sm font-medium shadow-sm hover:shadow-md transition-shadow duration-200 border border-gray-100">
                {tech}
              </span>
            ))}
          </div>
        </section>
      
        {project.description.length && (
          <section class="prose max-w-none bg-white rounded-2xl p-8 shadow-sm">
            <h2 class="text-2xl font-semibold mb-4">Описание проекта</h2>
            {project.description.map(item => (
                <>
                    <p>
                        {item}
                    </p>
                    <br/>
                </>
            ))}
          </section>
        )}
        <!-- Добавьте модальное окно -->
        <div id="imageModal" class="fixed inset-0 bg-black bg-opacity-90 z-50 hidden flex items-center justify-center">
            <button id="modalCloseButton" class="absolute top-4 right-4 text-white hover:text-gray-300">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
            </button>
            
            <button id="prevButton" class="absolute left-4 text-white hover:text-gray-300">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
            </svg>
            </button>
            
            <button id="nextButton" class="absolute right-4 text-white hover:text-gray-300">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
            </button>
            
            <img id="modalImage" src="" alt="Enlarged view" class="max-h-[90vh] max-w-[90vw] object-contain" />
        </div>

      </article>      
</BaseLayout>

<script define:vars={{ project }}>

    let currentIndex = 0;
    const photos = project.photos
    const modal = document.getElementById('imageModal');
    const modalImage = document.getElementById('modalImage');
    const prevButton = document.getElementById('prevButton');
    const nextButton = document.getElementById('nextButton');
    const closeButton = document.getElementById('modalCloseButton');
    const gallery = document.getElementById('gallery');
    Array.from(gallery.querySelectorAll('img'))
        .forEach((img, index) => {
            img.addEventListener('click', () => openModal(index))
        })
  
    const openModal = (index) => {
        console.log('open')
        if (!modalImage || !modal) {
            return;
        }
        currentIndex = index;
        modalImage.src = photos[currentIndex];
        modal.classList.remove('hidden');
        document.body.style.overflow = 'hidden';
    };
  
    const closeModal = () => {
      modal?.classList.add('hidden');
      document.body.style.overflow = 'auto';
    };
  
    const prevImage = () => {
      currentIndex = (currentIndex - 1 + photos.length) % photos.length;
      if (modalImage) {
        modalImage.src = photos[currentIndex];
      }
    };
  
    const nextImage = () => {
      currentIndex = (currentIndex + 1) % photos.length;
      if (modalImage) {
        modalImage.src = photos[currentIndex];
      }
    };

    closeButton?.addEventListener('click', closeModal);
    prevButton?.addEventListener('click', prevImage);
    nextButton?.addEventListener('click', nextImage);
  
    // Закрытие по клавише Escape
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') closeModal();
      if (e.key === 'ArrowLeft') prevImage();
      if (e.key === 'ArrowRight') nextImage();
    });
  
    // Закрытие по клику вне изображения
    modal?.addEventListener('click', (e) => {
      if (e.target === modal) closeModal();
    });
  </script>
  
  <style>
    .prose {
      max-width: 65ch;
      margin: 0 auto;
    }
  
    /* Добавьте стили для курсора */
    .cursor-zoom-in {
      cursor: zoom-in;
    }
  </style>
  